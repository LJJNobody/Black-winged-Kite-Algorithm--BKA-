function [f1, f2] = ZDT(problem, pop_size)
% 输入参数:
%   problem: 测试函数名 ('zdt1'到'zdt6')
%   x: 决策变量矩阵 (N x D)，N为解的数量，D为维度
% 输出:
%   f1, f2: 目标函数值向量 (N x 1)

if nargin < 1, problem = 'zdt1'; end


n = size(x, 2); % 变量维度
f1 = x(:, 1);    % 所有解的第一个目标

lb=0;ub=1;dim=30;
x=unifrnd(lb,ub,pop_size,dim);

switch lower(problem)
    case 'zdt1'
        g = 1 + 9/(n-1)*sum(x(:, 2:end), 2);
        h = 1 - sqrt(f1./g);
        
    case 'zdt2'
        g = 1 + 9/(n-1)*sum(x(:, 2:end), 2);
        h = 1 - (f1./g).^2;
        
    case 'zdt3'
        g = 1 + 9/(n-1)*sum(x(:, 2:end), 2);
        h = 1 - sqrt(f1./g) - (f1./g).*sin(10*pi*f1);
        
    case 'zdt4' % 注意变量维度默认n=10
        if n ~= 10, warning('ZDT4通常使用n=10变量'); end
        g = 1 + 10*(n-1) + sum(x(:, 2:end).^2 - 10*cos(4*pi*x(:, 2:end)), 2);
        h = 1 - sqrt(f1./g);
        
    case 'zdt6' % 默认n=10
        if n ~= 10, warning('ZDT6通常使用n=10变量'); end
        g = 1 + 9*(sum(x(:, 2:end), 2)/(n-1)).^0.25;
        h = 1 - (f1./g).^2;
        
    otherwise
        error('不支持的ZDT函数');
end

f2 = g.*h; % 计算第二个目标
end